# Create postgres config map
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: jnl
  labels:
    app: postgres
data:
  POSTGRES_DB: aozerov
  POSTGRES_USER: aozerov
  POSTGRES_PASSWORD: "0112"
---
# Create postgres SVC
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: jnl
spec:
  type: NodePort
  ports:
  - port: 5432
    nodePort: 30432
  selector:
    app: postgres
---
# Create postgres Authentication
apiVersion: v1
kind: Secret
metadata:
  name: postgres-auth
  namespace: jnl
type: kubernetes.io/basic-auth
stringData:
  username: root
  password: "0112"
---
# Create postgres Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: jnl
spec:
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - image: postgres:10.4
        name: postgres
        envFrom:
          - configMapRef:
              name: postgres-config
        resources:
          limits:
            memory: "500Mi"
            cpu: "1"
          requests:
            memory: "500Mi"
        env:
        - name: POSTGRES_ROOT_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: postgres-auth
              key: password
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: postgres-persistent-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-persistent-storage
        persistentVolumeClaim:
          claimName: postgres-pv-claim
